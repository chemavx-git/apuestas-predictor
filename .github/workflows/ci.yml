name: CI/CD Ingestión

on:
  push:
    paths:
      - 'services/ingestion/**'
      - 'infra/manifests/ingestion.yaml'
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build-and-push:
    name: Build & Push Ingestión
    runs-on: self-hosted        # ← Ahora en tu runner gmktec

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r services/ingestion/requirements.txt

      - name: Build ingestion Docker image
        run: |
          docker build services/ingestion \
            -f services/ingestion/Dockerfile \
            -t gmktec-g5-ingestion:${{ github.sha }}

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Tag & Push ingestion image
        run: |
          IMAGE=${{ env.IMAGE_REGISTRY }}/ingestion
          TAG=${{ github.sha }}
          docker tag gmktec-g5-ingestion:${TAG} ${IMAGE}:${TAG}
          docker tag gmktec-g5-ingestion:${TAG} ${IMAGE}:latest
          docker push ${IMAGE}:${TAG}
          docker push ${IMAGE}:latest

  deploy:
    name: Deploy Ingestión en K3s
    needs: build-and-push
    runs-on: self-hosted        # ← También en gmktec

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Deploy ingestion to K3s
        run: |
          set -e
          cd /home/chemavx/apuestas-predictor

          # 1) Asegura namespace 'apuestas'
          kubectl create namespace apuestas --dry-run=client -o yaml | kubectl apply -f -

          # 2) (Re)crea secret con credenciales
          kubectl create secret generic ingestion-env \
            --from-literal=FOOTBALL_DATA_TOKEN="${{ secrets.FOOTBALL_DATA_TOKEN }}" \
            --from-literal=ODDS_API_KEY="${{ secrets.ODDS_API_KEY }}" \
            --from-literal=DB_USER="${{ secrets.DB_USER }}" \
            --from-literal=DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            --from-literal=DB_HOST="${{ secrets.DB_HOST }}" \
            --from-literal=DB_PORT="${{ secrets.DB_PORT }}" \
            --from-literal=DB_NAME="${{ secrets.DB_NAME }}" \
            --dry-run=client -o yaml | kubectl apply -n apuestas -f -

          # 3) Despliega el microservicio de ingesta
          kubectl apply -n apuestas -f infra/manifests/ingestion.yaml
          kubectl rollout status deployment/ingestion -n apuestas
