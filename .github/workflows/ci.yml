name: CI & Deploy Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DEFAULT_PYTHON_VERSION: '3.10'
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  ci:
    name: Lint → Test → Build & Publish Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Black
        run: black --check .

      - name: Run Flake8
        run: flake8 .

      - name: Run Tests
        run: pytest --maxfail=1 --disable-warnings -q

      - name: Build main app image
        run: |
          docker build . -f Dockerfile \
            -t gmktec-g5-app:${{ github.sha }}

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Tag & Push main app
        run: |
          IMAGE=${{ env.IMAGE_REGISTRY }}/apuestas-predictor
          TAG=${{ github.sha }}
          docker tag gmktec-g5-app:${TAG} ${IMAGE}:${TAG}
          docker tag gmktec-g5-app:${TAG} ${IMAGE}:latest
          docker push ${IMAGE}:${TAG}
          docker push ${IMAGE}:latest

      - name: Build ingestion service image
        run: |
          docker build services/ingestion \
            -f services/ingestion/Dockerfile \
            -t gmktec-g5-ingestion:${{ github.sha }}

      - name: Tag & Push ingestion service
        run: |
          IMAGE=${{ env.IMAGE_REGISTRY }}/ingestion
          TAG=${{ github.sha }}
          docker tag gmktec-g5-ingestion:${TAG} ${IMAGE}:${TAG}
          docker tag gmktec-g5-ingestion:${TAG} ${IMAGE}:latest
          docker push ${IMAGE}:${TAG}
          docker push ${IMAGE}:latest

  deploy:
    name: Deploy via SSH to Mini PC
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Run remote deploy on K3s host
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_KEY }}
          # strict: false
          script: |
            set -e

            cd /home/chemavx/apuestas-predictor

            git fetch origin main
            git reset --hard origin/main

            # (Re)create the ingestion-env Secret in K3s
            kubectl create secret generic ingestion-env \
              --from-literal=FOOTBALL_DATA_TOKEN="${{ secrets.FOOTBALL_DATA_TOKEN }}" \
              --from-literal=ODDS_API_KEY="${{ secrets.ODDS_API_KEY }}" \
              --from-literal=DB_USER="${{ secrets.DB_USER }}" \
              --from-literal=DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              --from-literal=DB_HOST="${{ secrets.DB_HOST }}" \
              --from-literal=DB_PORT="${{ secrets.DB_PORT }}" \
              --from-literal=DB_NAME="${{ secrets.DB_NAME }}" \
              --dry-run=client -o yaml | kubectl apply -f -

            # Deploy main app
            kubectl apply -f k8s/deployment.yaml
            kubectl rollout status deployment/apuestas-predictor

            # Deploy ingestion service
            kubectl apply -f infra/manifests/ingestion.yaml
            kubectl rollout status deployment/ingestion

            echo "✅ Deployment complete on $HOST"
